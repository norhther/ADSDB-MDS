import time
import duckdb
import pathlib
import random
from pandas_profiling import ProfileReport

def data_quality(df):
    profile = ProfileReport(df, title="Profiling Report")
    profile.to_widgets()

def run():
    sleeping_time = 10
    while True:
        offset = random.randint(0, 9)
        try:
            conn_expl = duckdb.connect(database=str(pathlib.Path().resolve().parent) + '/exploitation/my-db.duckdb', read_only=False)
            conn_trusted = duckdb.connect(database=str(pathlib.Path().resolve().parent) + '/trusted/my-db.duckdb', read_only=False)
            trusted_cursor = conn_trusted.cursor()
            # merge tables
            df = trusted_cursor.execute("SELECT * FROM student INNER JOIN countrycode on student.country = countrycode.country INNER JOIN IQ on countrycode.country_name = IQ.country").df()
            conn_expl.execute(f"CREATE OR REPLACE TABLE dataset AS SELECT * FROM df")
            print("Generating data quality report...")
            data_quality(df)

        except BaseException as error:
            print(error)
            print("Could not lock the file, someone is accessing it right now. Retrying shortly... Nobody likes race conditions :D")
            
        finally:
            conn_expl.close()
            conn_trusted.close()
            time.sleep(sleeping_time + offset)
